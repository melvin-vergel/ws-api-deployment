client_max_body_size 50M;

# --- Authentication Configuration for SQLite Web ---

# -------------------------------------------------------------
# Configuration for SQLite Web (REPLACE_VIRTUAL_HOST_SQL)
# This block manually defines the configuration for the SQL host 
# to enforce Basic Auth and overrides the dynamic nginx-proxy routing 
# for this specific host.
# -------------------------------------------------------------
server {
    listen 80;
    listen 443 ssl;
    server_name REPLACE_VIRTUAL_HOST_SQL;

    # --- SSL CONFIGURATION (REQUIRED for listen 443 ssl) ---
    # Nginx requires these paths when 'ssl' is present on the listen directive.
    ssl_certificate /etc/nginx/certs/REPLACE_VIRTUAL_HOST_SQL.crt;
    ssl_certificate_key /etc/nginx/certs/REPLACE_VIRTUAL_HOST_SQL.key;
    
    # Include standard SSL parameters provided by nginx-proxy
    # Manually ensure some basic SSL security settings are present
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    # Basic Auth directives placed inside a valid location block
    location / {
        # Realm text shown to the user in the login prompt
        auth_basic "Restricted Access to SQLite Web"; 
        # Path to the .htpasswd file inside the container
        auth_basic_user_file /etc/nginx/htpasswd/.htpasswd; 
        
        # Manually proxy the request to the internal Docker container: sqlite_web on its default port (8080)
        proxy_pass http://sqlite_web:8080;
    }
}